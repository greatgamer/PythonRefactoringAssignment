import unittest
import model
import csv_plugin
import uml_output
import sys

__author__ = "Peter Campbell"
__copyright__ = "Copyright 2018,BCPR301 Class Assignment 1"
__credits__ = []
__license__ = "GPL"
__version__ = "1.0.1"
__maintainer__ = "Peter Campbell"
__email__ = "peter@intrepid-adventure.com"
__status__ = "Development"

class MainTests(unittest.TestCase):

    def test_01_true_input(self):
        testclass = csv_plugin.CSV_handler()
        example_type = dict()
        expected = type(example_type)
        actual = type(testclass.open_file('linkedlist.csv'))
        self.assertEqual(expected, actual)

    def test_02_false_input(self):
        testclass = csv_plugin.CSV_handler()
        expected = False
        actual = testclass.open_file('dreaming.csv')
        self.assertEqual(expected, actual, "Expected {} got {}".format(expected, actual))        

    def test_03_compare_output(self):
        # Compares plugin output with output generated by model
        data_for_model = ['linkedlist.py']
        newModelData = model.FileProcessor()
        newModelData.process_files(data_for_model)
        model_data_module = newModelData.get_modules()
        testclass = csv_plugin.CSV_handler()
        expected = testclass.write_csv_file(model_data_module, 'testdatafile02.csv')
        test_module = testclass.open_file('test_data_file01.csv')
        

    def test_04_compare_csv_with_output_file(self):
        #compares a file already in csv form with a newly generated file based on the original
        import filecmp
        testclass = csv_plugin.CSV_handler()
        input_file = 'linkedlist.csv'
        output_file = 'test_compare_file.csv'
        module = testclass.open_file(input_file)
        testclass.write_csv_file(module , output_file)
        expected = True
        actual = filecmp.cmp(input_file, output_file, True)
        self.assertEqual(expected,actual)

if __name__ == '__main__':
    unittest.main(verbosity=2)  # with more details
 